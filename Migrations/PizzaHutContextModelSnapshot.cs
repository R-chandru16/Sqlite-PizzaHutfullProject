// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaHut.Models;

#nullable disable

namespace PizzaHut.Migrations
{
    [DbContext(typeof(PizzaHutContext))]
    partial class PizzaHutContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("PizzaHut.Models.OrderDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToppingsID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("Order_ID");

                    b.HasIndex("ToppingsID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("PizzaHut.Models.Orders", b =>
                {
                    b.Property<int>("Order_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Pizza_ID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Qty")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Order_ID");

                    b.HasIndex("Pizza_ID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaHut.Models.Pizza", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Crust")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Images")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Speicality")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Pizza");

                    b.HasData(
                        new
                        {
                            ID = 1001,
                            Crust = "Fresh Pan Pizza",
                            Description = "Peppy Paneer Cheese Burst Topped with Extra Cheese",
                            Images = "/images/pizza-1.jpg",
                            Name = "Veg Loaded",
                            Price = 199.0,
                            Speicality = "with Pepse"
                        },
                        new
                        {
                            ID = 1002,
                            Crust = "Fresh Pan Pizza",
                            Description = "Peppy Paneer Cheese Burst Topped with Extra Cheese",
                            Images = "/images/pizza-2.jpg",
                            Name = "Peppy Paneer Pizza",
                            Price = 299.0,
                            Speicality = "with extra toppings"
                        },
                        new
                        {
                            ID = 1003,
                            Crust = "Fresh Pan Pizza",
                            Description = "Mashroon Topped",
                            Images = "/images/pizza-3.jpg",
                            Name = "Peper Chicken",
                            Price = 199.0,
                            Speicality = "with Pepse"
                        },
                        new
                        {
                            ID = 1004,
                            Crust = "Fresh Pan Pizza",
                            Description = "Peppy Paneer Cheese Burst Topped with Extra Cheese",
                            Images = "/images/pizza-4.jpg",
                            Name = "Non Veg Loaded",
                            Price = 299.0,
                            Speicality = "with Pepse"
                        });
                });

            modelBuilder.Entity("PizzaHut.Models.Toppings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            ID = 201,
                            Name = "Tomato",
                            Price = 99.0
                        },
                        new
                        {
                            ID = 202,
                            Name = "Cheese",
                            Price = 89.0
                        },
                        new
                        {
                            ID = 203,
                            Name = "Onion",
                            Price = 100.0
                        });
                });

            modelBuilder.Entity("PizzaHut.Models.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 101,
                            Address = "#Neyveli",
                            Name = "chandru",
                            Password = "chandru2598",
                            Phone = "9876543213",
                            UserID = "chandru@gmail.com"
                        },
                        new
                        {
                            ID = 102,
                            Address = "#demo",
                            Name = "demo",
                            Password = "demo",
                            Phone = "9876543214",
                            UserID = "Demo@gmail.com"
                        });
                });

            modelBuilder.Entity("PizzaHut.Models.OrderDetails", b =>
                {
                    b.HasOne("PizzaHut.Models.Orders", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("Order_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaHut.Models.Toppings", "Toppings")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ToppingsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Toppings");
                });

            modelBuilder.Entity("PizzaHut.Models.Orders", b =>
                {
                    b.HasOne("PizzaHut.Models.Pizza", "Pizza")
                        .WithMany("Orders")
                        .HasForeignKey("Pizza_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaHut.Models.Users", "Users")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PizzaHut.Models.Orders", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("PizzaHut.Models.Pizza", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PizzaHut.Models.Toppings", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("PizzaHut.Models.Users", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
